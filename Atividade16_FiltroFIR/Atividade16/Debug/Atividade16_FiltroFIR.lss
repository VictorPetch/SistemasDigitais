
Atividade16_FiltroFIR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  0000051e  00000592  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000051e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000750  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000670  00000000  00000000  00000d90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000026f  00000000  00000000  00001400  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001670  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038a  00000000  00000000  000016a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000148  00000000  00000000  00001a2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001b76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e1       	ldi	r30, 0x1E	; 30
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 31       	cpi	r26, 0x1C	; 28
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 8d 02 	jmp	0x51a	; 0x51a <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:
#define F_CPU 160000000
#include <util/delay.h>  //_delay_ms(iDelay);          // Call Delay function
#include <math.h>
#define len 7 // Number of taps
#include "FiltroFIR.h"
int main(void){
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	e8 97       	sbiw	r28, 0x38	; 56
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61

	unsigned int adcOut;
	
	DDRD = 0xFF;                  // Set PORTD as Output
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
  ae:	84 b9       	out	0x04, r24	; 4

	// Set ADCSRA Register in ATMega168
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1);
  b0:	86 e8       	ldi	r24, 0x86	; 134
  b2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	// Set ADMUX Register in ATMega168
	ADMUX = (1<<REFS0) | (1<<ADLAR);
  b6:	80 e6       	ldi	r24, 0x60	; 96
  b8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	
	

	uint8_t buff[len];
	
	uint8_t idx = 0;
  bc:	1e aa       	std	Y+54, r1	; 0x36
		// Start conversion by setting ADSC in ADCSRA Register
		ADCSRA |= (1<<ADSC);
		// wait until conversion complete ADSC=0 -> Complete
		while (ADCSRA & (1<<ADSC));
		//adcOut = (ADCW>>3);
		buff[idx] = ADCH;
  be:	ce 01       	movw	r24, r28
  c0:	01 96       	adiw	r24, 0x01	; 1
  c2:	9b ab       	std	Y+51, r25	; 0x33
  c4:	8a ab       	std	Y+50, r24	; 0x32
  c6:	5c 01       	movw	r10, r24
  c8:	c1 96       	adiw	r24, 0x31	; 49
  ca:	9d ab       	std	Y+53, r25	; 0x35
  cc:	8c ab       	std	Y+52, r24	; 0x34
  ce:	1e 01       	movw	r2, r28
  d0:	94 e2       	ldi	r25, 0x24	; 36
  d2:	29 0e       	add	r2, r25
  d4:	31 1c       	adc	r3, r1
	
	uint8_t idx = 0;

	while(1) {                     // Loop Forever
		// Start conversion by setting ADSC in ADCSRA Register
		ADCSRA |= (1<<ADSC);
  d6:	ea e7       	ldi	r30, 0x7A	; 122
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	80 64       	ori	r24, 0x40	; 64
  de:	80 83       	st	Z, r24
		// wait until conversion complete ADSC=0 -> Complete
		while (ADCSRA & (1<<ADSC));
  e0:	ea e7       	ldi	r30, 0x7A	; 122
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	86 fd       	sbrc	r24, 6
  e8:	fb cf       	rjmp	.-10     	; 0xe0 <main+0x4a>
		//adcOut = (ADCW>>3);
		buff[idx] = ADCH;
  ea:	e9 e7       	ldi	r30, 0x79	; 121
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	e1 e0       	ldi	r30, 0x01	; 1
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	ec 0f       	add	r30, r28
  f6:	fd 1f       	adc	r31, r29
  f8:	9e a9       	ldd	r25, Y+54	; 0x36
  fa:	e9 0f       	add	r30, r25
  fc:	f1 1d       	adc	r31, r1
  fe:	80 83       	st	Z, r24
		idx++;
 100:	9f 5f       	subi	r25, 0xFF	; 255
 102:	9e ab       	std	Y+54, r25	; 0x36
		int y[len];
		double coef[] = {0.8186556917688659,-2.402372519416408,4.7262697696633476,-5.493053203929631,
 104:	8c e1       	ldi	r24, 0x1C	; 28
 106:	e0 e0       	ldi	r30, 0x00	; 0
 108:	f1 e0       	ldi	r31, 0x01	; 1
 10a:	de 01       	movw	r26, r28
 10c:	18 96       	adiw	r26, 0x08	; 8
 10e:	01 90       	ld	r0, Z+
 110:	0d 92       	st	X+, r0
 112:	8a 95       	dec	r24
 114:	e1 f7       	brne	.-8      	; 0x10e <main+0x78>
 116:	fe 01       	movw	r30, r28
 118:	b4 96       	adiw	r30, 0x24	; 36
 11a:	f8 af       	std	Y+56, r31	; 0x38
 11c:	ef ab       	std	Y+55, r30	; 0x37
 11e:	6f 01       	movw	r12, r30
 120:	ce 01       	movw	r24, r28
 122:	01 96       	adiw	r24, 0x01	; 1
 124:	4c 01       	movw	r8, r24
 126:	3b c0       	rjmp	.+118    	; 0x19e <main+0x108>
		4.7262697696633476,-2.402372519416408,0.8186556917688659};
		
		for(uint8_t k =0; k < len; k++){
			for(uint8_t i =0; i<len;i++){
				if(k-i>=0) y[k] += coef[i]*buff[k-i];
 128:	c8 01       	movw	r24, r16
 12a:	8a 19       	sub	r24, r10
 12c:	9b 09       	sbc	r25, r11
 12e:	22 f1       	brmi	.+72     	; 0x178 <main+0xe2>
 130:	f8 01       	movw	r30, r16
 132:	60 81       	ld	r22, Z
 134:	70 e0       	ldi	r23, 0x00	; 0
 136:	80 e0       	ldi	r24, 0x00	; 0
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 94 01 	call	0x328	; 0x328 <__floatsisf>
 13e:	f7 01       	movw	r30, r14
 140:	20 81       	ld	r18, Z
 142:	31 81       	ldd	r19, Z+1	; 0x01
 144:	42 81       	ldd	r20, Z+2	; 0x02
 146:	53 81       	ldd	r21, Z+3	; 0x03
 148:	0e 94 20 02 	call	0x440	; 0x440 <__mulsf3>
 14c:	2b 01       	movw	r4, r22
 14e:	3c 01       	movw	r6, r24
 150:	f6 01       	movw	r30, r12
 152:	60 81       	ld	r22, Z
 154:	71 81       	ldd	r23, Z+1	; 0x01
 156:	07 2e       	mov	r0, r23
 158:	00 0c       	add	r0, r0
 15a:	88 0b       	sbc	r24, r24
 15c:	99 0b       	sbc	r25, r25
 15e:	0e 94 94 01 	call	0x328	; 0x328 <__floatsisf>
 162:	9b 01       	movw	r18, r22
 164:	ac 01       	movw	r20, r24
 166:	c3 01       	movw	r24, r6
 168:	b2 01       	movw	r22, r4
 16a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <__addsf3>
 16e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <__fixsfsi>
 172:	f6 01       	movw	r30, r12
 174:	71 83       	std	Z+1, r23	; 0x01
 176:	60 83       	st	Z, r22
 178:	f4 e0       	ldi	r31, 0x04	; 4
 17a:	ef 0e       	add	r14, r31
 17c:	f1 1c       	adc	r15, r1
 17e:	01 50       	subi	r16, 0x01	; 1
 180:	11 09       	sbc	r17, r1
		int y[len];
		double coef[] = {0.8186556917688659,-2.402372519416408,4.7262697696633476,-5.493053203929631,
		4.7262697696633476,-2.402372519416408,0.8186556917688659};
		
		for(uint8_t k =0; k < len; k++){
			for(uint8_t i =0; i<len;i++){
 182:	e2 14       	cp	r14, r2
 184:	f3 04       	cpc	r15, r3
 186:	81 f6       	brne	.-96     	; 0x128 <main+0x92>
 188:	8f ef       	ldi	r24, 0xFF	; 255
 18a:	88 1a       	sub	r8, r24
 18c:	98 0a       	sbc	r9, r24
 18e:	92 e0       	ldi	r25, 0x02	; 2
 190:	c9 0e       	add	r12, r25
 192:	d1 1c       	adc	r13, r1
		idx++;
		int y[len];
		double coef[] = {0.8186556917688659,-2.402372519416408,4.7262697696633476,-5.493053203929631,
		4.7262697696633476,-2.402372519416408,0.8186556917688659};
		
		for(uint8_t k =0; k < len; k++){
 194:	ec a9       	ldd	r30, Y+52	; 0x34
 196:	fd a9       	ldd	r31, Y+53	; 0x35
 198:	ce 16       	cp	r12, r30
 19a:	df 06       	cpc	r13, r31
 19c:	31 f0       	breq	.+12     	; 0x1aa <main+0x114>
 19e:	7e 01       	movw	r14, r28
 1a0:	f8 e0       	ldi	r31, 0x08	; 8
 1a2:	ef 0e       	add	r14, r31
 1a4:	f1 1c       	adc	r15, r1
	
	

	uint8_t buff[len];
	
	uint8_t idx = 0;
 1a6:	84 01       	movw	r16, r8
 1a8:	bf cf       	rjmp	.-130    	; 0x128 <main+0x92>
 1aa:	ef a9       	ldd	r30, Y+55	; 0x37
 1ac:	f8 ad       	ldd	r31, Y+56	; 0x38
				if(k-i>=0) y[k] += coef[i]*buff[k-i];
			}
			
		} 
		for(uint8_t i = 0;i<len;i++){
			adcOut = y[i];
 1ae:	81 91       	ld	r24, Z+
 1b0:	91 91       	ld	r25, Z+
			PORTD = (adcOut & 0b0000000000111111)<<2; // SHIFT RIGHT Two bits to start from port 2
 1b2:	28 2f       	mov	r18, r24
 1b4:	22 0f       	add	r18, r18
 1b6:	22 0f       	add	r18, r18
 1b8:	2b b9       	out	0x0b, r18	; 11
			PORTB = (adcOut & 0b0000000011000000)>>6;
 1ba:	80 7c       	andi	r24, 0xC0	; 192
 1bc:	99 27       	eor	r25, r25
 1be:	00 24       	eor	r0, r0
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	00 1c       	adc	r0, r0
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	00 1c       	adc	r0, r0
 1cc:	89 2f       	mov	r24, r25
 1ce:	90 2d       	mov	r25, r0
 1d0:	85 b9       	out	0x05, r24	; 5
			for(uint8_t i =0; i<len;i++){
				if(k-i>=0) y[k] += coef[i]*buff[k-i];
			}
			
		} 
		for(uint8_t i = 0;i<len;i++){
 1d2:	8c a9       	ldd	r24, Y+52	; 0x34
 1d4:	9d a9       	ldd	r25, Y+53	; 0x35
 1d6:	e8 17       	cp	r30, r24
 1d8:	f9 07       	cpc	r31, r25
 1da:	49 f7       	brne	.-46     	; 0x1ae <main+0x118>
 1dc:	7c cf       	rjmp	.-264    	; 0xd6 <main+0x40>

000001de <__subsf3>:
 1de:	50 58       	subi	r21, 0x80	; 128

000001e0 <__addsf3>:
 1e0:	bb 27       	eor	r27, r27
 1e2:	aa 27       	eor	r26, r26
 1e4:	0e 94 07 01 	call	0x20e	; 0x20e <__addsf3x>
 1e8:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_round>
 1ec:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__fp_pscA>
 1f0:	38 f0       	brcs	.+14     	; 0x200 <__addsf3+0x20>
 1f2:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_pscB>
 1f6:	20 f0       	brcs	.+8      	; 0x200 <__addsf3+0x20>
 1f8:	39 f4       	brne	.+14     	; 0x208 <__addsf3+0x28>
 1fa:	9f 3f       	cpi	r25, 0xFF	; 255
 1fc:	19 f4       	brne	.+6      	; 0x204 <__addsf3+0x24>
 1fe:	26 f4       	brtc	.+8      	; 0x208 <__addsf3+0x28>
 200:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_nan>
 204:	0e f4       	brtc	.+2      	; 0x208 <__addsf3+0x28>
 206:	e0 95       	com	r30
 208:	e7 fb       	bst	r30, 7
 20a:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_inf>

0000020e <__addsf3x>:
 20e:	e9 2f       	mov	r30, r25
 210:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__fp_split3>
 214:	58 f3       	brcs	.-42     	; 0x1ec <__addsf3+0xc>
 216:	ba 17       	cp	r27, r26
 218:	62 07       	cpc	r22, r18
 21a:	73 07       	cpc	r23, r19
 21c:	84 07       	cpc	r24, r20
 21e:	95 07       	cpc	r25, r21
 220:	20 f0       	brcs	.+8      	; 0x22a <__addsf3x+0x1c>
 222:	79 f4       	brne	.+30     	; 0x242 <__addsf3x+0x34>
 224:	a6 f5       	brtc	.+104    	; 0x28e <__addsf3x+0x80>
 226:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_zero>
 22a:	0e f4       	brtc	.+2      	; 0x22e <__addsf3x+0x20>
 22c:	e0 95       	com	r30
 22e:	0b 2e       	mov	r0, r27
 230:	ba 2f       	mov	r27, r26
 232:	a0 2d       	mov	r26, r0
 234:	0b 01       	movw	r0, r22
 236:	b9 01       	movw	r22, r18
 238:	90 01       	movw	r18, r0
 23a:	0c 01       	movw	r0, r24
 23c:	ca 01       	movw	r24, r20
 23e:	a0 01       	movw	r20, r0
 240:	11 24       	eor	r1, r1
 242:	ff 27       	eor	r31, r31
 244:	59 1b       	sub	r21, r25
 246:	99 f0       	breq	.+38     	; 0x26e <__addsf3x+0x60>
 248:	59 3f       	cpi	r21, 0xF9	; 249
 24a:	50 f4       	brcc	.+20     	; 0x260 <__addsf3x+0x52>
 24c:	50 3e       	cpi	r21, 0xE0	; 224
 24e:	68 f1       	brcs	.+90     	; 0x2aa <__addsf3x+0x9c>
 250:	1a 16       	cp	r1, r26
 252:	f0 40       	sbci	r31, 0x00	; 0
 254:	a2 2f       	mov	r26, r18
 256:	23 2f       	mov	r18, r19
 258:	34 2f       	mov	r19, r20
 25a:	44 27       	eor	r20, r20
 25c:	58 5f       	subi	r21, 0xF8	; 248
 25e:	f3 cf       	rjmp	.-26     	; 0x246 <__addsf3x+0x38>
 260:	46 95       	lsr	r20
 262:	37 95       	ror	r19
 264:	27 95       	ror	r18
 266:	a7 95       	ror	r26
 268:	f0 40       	sbci	r31, 0x00	; 0
 26a:	53 95       	inc	r21
 26c:	c9 f7       	brne	.-14     	; 0x260 <__addsf3x+0x52>
 26e:	7e f4       	brtc	.+30     	; 0x28e <__addsf3x+0x80>
 270:	1f 16       	cp	r1, r31
 272:	ba 0b       	sbc	r27, r26
 274:	62 0b       	sbc	r22, r18
 276:	73 0b       	sbc	r23, r19
 278:	84 0b       	sbc	r24, r20
 27a:	ba f0       	brmi	.+46     	; 0x2aa <__addsf3x+0x9c>
 27c:	91 50       	subi	r25, 0x01	; 1
 27e:	a1 f0       	breq	.+40     	; 0x2a8 <__addsf3x+0x9a>
 280:	ff 0f       	add	r31, r31
 282:	bb 1f       	adc	r27, r27
 284:	66 1f       	adc	r22, r22
 286:	77 1f       	adc	r23, r23
 288:	88 1f       	adc	r24, r24
 28a:	c2 f7       	brpl	.-16     	; 0x27c <__addsf3x+0x6e>
 28c:	0e c0       	rjmp	.+28     	; 0x2aa <__addsf3x+0x9c>
 28e:	ba 0f       	add	r27, r26
 290:	62 1f       	adc	r22, r18
 292:	73 1f       	adc	r23, r19
 294:	84 1f       	adc	r24, r20
 296:	48 f4       	brcc	.+18     	; 0x2aa <__addsf3x+0x9c>
 298:	87 95       	ror	r24
 29a:	77 95       	ror	r23
 29c:	67 95       	ror	r22
 29e:	b7 95       	ror	r27
 2a0:	f7 95       	ror	r31
 2a2:	9e 3f       	cpi	r25, 0xFE	; 254
 2a4:	08 f0       	brcs	.+2      	; 0x2a8 <__addsf3x+0x9a>
 2a6:	b0 cf       	rjmp	.-160    	; 0x208 <__addsf3+0x28>
 2a8:	93 95       	inc	r25
 2aa:	88 0f       	add	r24, r24
 2ac:	08 f0       	brcs	.+2      	; 0x2b0 <__addsf3x+0xa2>
 2ae:	99 27       	eor	r25, r25
 2b0:	ee 0f       	add	r30, r30
 2b2:	97 95       	ror	r25
 2b4:	87 95       	ror	r24
 2b6:	08 95       	ret

000002b8 <__fixsfsi>:
 2b8:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__fixunssfsi>
 2bc:	68 94       	set
 2be:	b1 11       	cpse	r27, r1
 2c0:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_szero>
 2c4:	08 95       	ret

000002c6 <__fixunssfsi>:
 2c6:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__fp_splitA>
 2ca:	88 f0       	brcs	.+34     	; 0x2ee <__fixunssfsi+0x28>
 2cc:	9f 57       	subi	r25, 0x7F	; 127
 2ce:	98 f0       	brcs	.+38     	; 0x2f6 <__fixunssfsi+0x30>
 2d0:	b9 2f       	mov	r27, r25
 2d2:	99 27       	eor	r25, r25
 2d4:	b7 51       	subi	r27, 0x17	; 23
 2d6:	b0 f0       	brcs	.+44     	; 0x304 <__fixunssfsi+0x3e>
 2d8:	e1 f0       	breq	.+56     	; 0x312 <__fixunssfsi+0x4c>
 2da:	66 0f       	add	r22, r22
 2dc:	77 1f       	adc	r23, r23
 2de:	88 1f       	adc	r24, r24
 2e0:	99 1f       	adc	r25, r25
 2e2:	1a f0       	brmi	.+6      	; 0x2ea <__fixunssfsi+0x24>
 2e4:	ba 95       	dec	r27
 2e6:	c9 f7       	brne	.-14     	; 0x2da <__fixunssfsi+0x14>
 2e8:	14 c0       	rjmp	.+40     	; 0x312 <__fixunssfsi+0x4c>
 2ea:	b1 30       	cpi	r27, 0x01	; 1
 2ec:	91 f0       	breq	.+36     	; 0x312 <__fixunssfsi+0x4c>
 2ee:	0e 94 19 02 	call	0x432	; 0x432 <__fp_zero>
 2f2:	b1 e0       	ldi	r27, 0x01	; 1
 2f4:	08 95       	ret
 2f6:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_zero>
 2fa:	67 2f       	mov	r22, r23
 2fc:	78 2f       	mov	r23, r24
 2fe:	88 27       	eor	r24, r24
 300:	b8 5f       	subi	r27, 0xF8	; 248
 302:	39 f0       	breq	.+14     	; 0x312 <__fixunssfsi+0x4c>
 304:	b9 3f       	cpi	r27, 0xF9	; 249
 306:	cc f3       	brlt	.-14     	; 0x2fa <__fixunssfsi+0x34>
 308:	86 95       	lsr	r24
 30a:	77 95       	ror	r23
 30c:	67 95       	ror	r22
 30e:	b3 95       	inc	r27
 310:	d9 f7       	brne	.-10     	; 0x308 <__fixunssfsi+0x42>
 312:	3e f4       	brtc	.+14     	; 0x322 <__fixunssfsi+0x5c>
 314:	90 95       	com	r25
 316:	80 95       	com	r24
 318:	70 95       	com	r23
 31a:	61 95       	neg	r22
 31c:	7f 4f       	sbci	r23, 0xFF	; 255
 31e:	8f 4f       	sbci	r24, 0xFF	; 255
 320:	9f 4f       	sbci	r25, 0xFF	; 255
 322:	08 95       	ret

00000324 <__floatunsisf>:
 324:	e8 94       	clt
 326:	09 c0       	rjmp	.+18     	; 0x33a <__floatsisf+0x12>

00000328 <__floatsisf>:
 328:	97 fb       	bst	r25, 7
 32a:	3e f4       	brtc	.+14     	; 0x33a <__floatsisf+0x12>
 32c:	90 95       	com	r25
 32e:	80 95       	com	r24
 330:	70 95       	com	r23
 332:	61 95       	neg	r22
 334:	7f 4f       	sbci	r23, 0xFF	; 255
 336:	8f 4f       	sbci	r24, 0xFF	; 255
 338:	9f 4f       	sbci	r25, 0xFF	; 255
 33a:	99 23       	and	r25, r25
 33c:	a9 f0       	breq	.+42     	; 0x368 <__floatsisf+0x40>
 33e:	f9 2f       	mov	r31, r25
 340:	96 e9       	ldi	r25, 0x96	; 150
 342:	bb 27       	eor	r27, r27
 344:	93 95       	inc	r25
 346:	f6 95       	lsr	r31
 348:	87 95       	ror	r24
 34a:	77 95       	ror	r23
 34c:	67 95       	ror	r22
 34e:	b7 95       	ror	r27
 350:	f1 11       	cpse	r31, r1
 352:	f8 cf       	rjmp	.-16     	; 0x344 <__floatsisf+0x1c>
 354:	fa f4       	brpl	.+62     	; 0x394 <__floatsisf+0x6c>
 356:	bb 0f       	add	r27, r27
 358:	11 f4       	brne	.+4      	; 0x35e <__floatsisf+0x36>
 35a:	60 ff       	sbrs	r22, 0
 35c:	1b c0       	rjmp	.+54     	; 0x394 <__floatsisf+0x6c>
 35e:	6f 5f       	subi	r22, 0xFF	; 255
 360:	7f 4f       	sbci	r23, 0xFF	; 255
 362:	8f 4f       	sbci	r24, 0xFF	; 255
 364:	9f 4f       	sbci	r25, 0xFF	; 255
 366:	16 c0       	rjmp	.+44     	; 0x394 <__floatsisf+0x6c>
 368:	88 23       	and	r24, r24
 36a:	11 f0       	breq	.+4      	; 0x370 <__floatsisf+0x48>
 36c:	96 e9       	ldi	r25, 0x96	; 150
 36e:	11 c0       	rjmp	.+34     	; 0x392 <__floatsisf+0x6a>
 370:	77 23       	and	r23, r23
 372:	21 f0       	breq	.+8      	; 0x37c <__floatsisf+0x54>
 374:	9e e8       	ldi	r25, 0x8E	; 142
 376:	87 2f       	mov	r24, r23
 378:	76 2f       	mov	r23, r22
 37a:	05 c0       	rjmp	.+10     	; 0x386 <__floatsisf+0x5e>
 37c:	66 23       	and	r22, r22
 37e:	71 f0       	breq	.+28     	; 0x39c <__floatsisf+0x74>
 380:	96 e8       	ldi	r25, 0x86	; 134
 382:	86 2f       	mov	r24, r22
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	60 e0       	ldi	r22, 0x00	; 0
 388:	2a f0       	brmi	.+10     	; 0x394 <__floatsisf+0x6c>
 38a:	9a 95       	dec	r25
 38c:	66 0f       	add	r22, r22
 38e:	77 1f       	adc	r23, r23
 390:	88 1f       	adc	r24, r24
 392:	da f7       	brpl	.-10     	; 0x38a <__floatsisf+0x62>
 394:	88 0f       	add	r24, r24
 396:	96 95       	lsr	r25
 398:	87 95       	ror	r24
 39a:	97 f9       	bld	r25, 7
 39c:	08 95       	ret

0000039e <__fp_inf>:
 39e:	97 f9       	bld	r25, 7
 3a0:	9f 67       	ori	r25, 0x7F	; 127
 3a2:	80 e8       	ldi	r24, 0x80	; 128
 3a4:	70 e0       	ldi	r23, 0x00	; 0
 3a6:	60 e0       	ldi	r22, 0x00	; 0
 3a8:	08 95       	ret

000003aa <__fp_nan>:
 3aa:	9f ef       	ldi	r25, 0xFF	; 255
 3ac:	80 ec       	ldi	r24, 0xC0	; 192
 3ae:	08 95       	ret

000003b0 <__fp_pscA>:
 3b0:	00 24       	eor	r0, r0
 3b2:	0a 94       	dec	r0
 3b4:	16 16       	cp	r1, r22
 3b6:	17 06       	cpc	r1, r23
 3b8:	18 06       	cpc	r1, r24
 3ba:	09 06       	cpc	r0, r25
 3bc:	08 95       	ret

000003be <__fp_pscB>:
 3be:	00 24       	eor	r0, r0
 3c0:	0a 94       	dec	r0
 3c2:	12 16       	cp	r1, r18
 3c4:	13 06       	cpc	r1, r19
 3c6:	14 06       	cpc	r1, r20
 3c8:	05 06       	cpc	r0, r21
 3ca:	08 95       	ret

000003cc <__fp_round>:
 3cc:	09 2e       	mov	r0, r25
 3ce:	03 94       	inc	r0
 3d0:	00 0c       	add	r0, r0
 3d2:	11 f4       	brne	.+4      	; 0x3d8 <__fp_round+0xc>
 3d4:	88 23       	and	r24, r24
 3d6:	52 f0       	brmi	.+20     	; 0x3ec <__fp_round+0x20>
 3d8:	bb 0f       	add	r27, r27
 3da:	40 f4       	brcc	.+16     	; 0x3ec <__fp_round+0x20>
 3dc:	bf 2b       	or	r27, r31
 3de:	11 f4       	brne	.+4      	; 0x3e4 <__fp_round+0x18>
 3e0:	60 ff       	sbrs	r22, 0
 3e2:	04 c0       	rjmp	.+8      	; 0x3ec <__fp_round+0x20>
 3e4:	6f 5f       	subi	r22, 0xFF	; 255
 3e6:	7f 4f       	sbci	r23, 0xFF	; 255
 3e8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ea:	9f 4f       	sbci	r25, 0xFF	; 255
 3ec:	08 95       	ret

000003ee <__fp_split3>:
 3ee:	57 fd       	sbrc	r21, 7
 3f0:	90 58       	subi	r25, 0x80	; 128
 3f2:	44 0f       	add	r20, r20
 3f4:	55 1f       	adc	r21, r21
 3f6:	59 f0       	breq	.+22     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f8:	5f 3f       	cpi	r21, 0xFF	; 255
 3fa:	71 f0       	breq	.+28     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3fc:	47 95       	ror	r20

000003fe <__fp_splitA>:
 3fe:	88 0f       	add	r24, r24
 400:	97 fb       	bst	r25, 7
 402:	99 1f       	adc	r25, r25
 404:	61 f0       	breq	.+24     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 406:	9f 3f       	cpi	r25, 0xFF	; 255
 408:	79 f0       	breq	.+30     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 40a:	87 95       	ror	r24
 40c:	08 95       	ret
 40e:	12 16       	cp	r1, r18
 410:	13 06       	cpc	r1, r19
 412:	14 06       	cpc	r1, r20
 414:	55 1f       	adc	r21, r21
 416:	f2 cf       	rjmp	.-28     	; 0x3fc <__fp_split3+0xe>
 418:	46 95       	lsr	r20
 41a:	f1 df       	rcall	.-30     	; 0x3fe <__fp_splitA>
 41c:	08 c0       	rjmp	.+16     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 41e:	16 16       	cp	r1, r22
 420:	17 06       	cpc	r1, r23
 422:	18 06       	cpc	r1, r24
 424:	99 1f       	adc	r25, r25
 426:	f1 cf       	rjmp	.-30     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 428:	86 95       	lsr	r24
 42a:	71 05       	cpc	r23, r1
 42c:	61 05       	cpc	r22, r1
 42e:	08 94       	sec
 430:	08 95       	ret

00000432 <__fp_zero>:
 432:	e8 94       	clt

00000434 <__fp_szero>:
 434:	bb 27       	eor	r27, r27
 436:	66 27       	eor	r22, r22
 438:	77 27       	eor	r23, r23
 43a:	cb 01       	movw	r24, r22
 43c:	97 f9       	bld	r25, 7
 43e:	08 95       	ret

00000440 <__mulsf3>:
 440:	0e 94 33 02 	call	0x466	; 0x466 <__mulsf3x>
 444:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_round>
 448:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__fp_pscA>
 44c:	38 f0       	brcs	.+14     	; 0x45c <__mulsf3+0x1c>
 44e:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_pscB>
 452:	20 f0       	brcs	.+8      	; 0x45c <__mulsf3+0x1c>
 454:	95 23       	and	r25, r21
 456:	11 f0       	breq	.+4      	; 0x45c <__mulsf3+0x1c>
 458:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_inf>
 45c:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_nan>
 460:	11 24       	eor	r1, r1
 462:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_szero>

00000466 <__mulsf3x>:
 466:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__fp_split3>
 46a:	70 f3       	brcs	.-36     	; 0x448 <__mulsf3+0x8>

0000046c <__mulsf3_pse>:
 46c:	95 9f       	mul	r25, r21
 46e:	c1 f3       	breq	.-16     	; 0x460 <__mulsf3+0x20>
 470:	95 0f       	add	r25, r21
 472:	50 e0       	ldi	r21, 0x00	; 0
 474:	55 1f       	adc	r21, r21
 476:	62 9f       	mul	r22, r18
 478:	f0 01       	movw	r30, r0
 47a:	72 9f       	mul	r23, r18
 47c:	bb 27       	eor	r27, r27
 47e:	f0 0d       	add	r31, r0
 480:	b1 1d       	adc	r27, r1
 482:	63 9f       	mul	r22, r19
 484:	aa 27       	eor	r26, r26
 486:	f0 0d       	add	r31, r0
 488:	b1 1d       	adc	r27, r1
 48a:	aa 1f       	adc	r26, r26
 48c:	64 9f       	mul	r22, r20
 48e:	66 27       	eor	r22, r22
 490:	b0 0d       	add	r27, r0
 492:	a1 1d       	adc	r26, r1
 494:	66 1f       	adc	r22, r22
 496:	82 9f       	mul	r24, r18
 498:	22 27       	eor	r18, r18
 49a:	b0 0d       	add	r27, r0
 49c:	a1 1d       	adc	r26, r1
 49e:	62 1f       	adc	r22, r18
 4a0:	73 9f       	mul	r23, r19
 4a2:	b0 0d       	add	r27, r0
 4a4:	a1 1d       	adc	r26, r1
 4a6:	62 1f       	adc	r22, r18
 4a8:	83 9f       	mul	r24, r19
 4aa:	a0 0d       	add	r26, r0
 4ac:	61 1d       	adc	r22, r1
 4ae:	22 1f       	adc	r18, r18
 4b0:	74 9f       	mul	r23, r20
 4b2:	33 27       	eor	r19, r19
 4b4:	a0 0d       	add	r26, r0
 4b6:	61 1d       	adc	r22, r1
 4b8:	23 1f       	adc	r18, r19
 4ba:	84 9f       	mul	r24, r20
 4bc:	60 0d       	add	r22, r0
 4be:	21 1d       	adc	r18, r1
 4c0:	82 2f       	mov	r24, r18
 4c2:	76 2f       	mov	r23, r22
 4c4:	6a 2f       	mov	r22, r26
 4c6:	11 24       	eor	r1, r1
 4c8:	9f 57       	subi	r25, 0x7F	; 127
 4ca:	50 40       	sbci	r21, 0x00	; 0
 4cc:	9a f0       	brmi	.+38     	; 0x4f4 <__mulsf3_pse+0x88>
 4ce:	f1 f0       	breq	.+60     	; 0x50c <__mulsf3_pse+0xa0>
 4d0:	88 23       	and	r24, r24
 4d2:	4a f0       	brmi	.+18     	; 0x4e6 <__mulsf3_pse+0x7a>
 4d4:	ee 0f       	add	r30, r30
 4d6:	ff 1f       	adc	r31, r31
 4d8:	bb 1f       	adc	r27, r27
 4da:	66 1f       	adc	r22, r22
 4dc:	77 1f       	adc	r23, r23
 4de:	88 1f       	adc	r24, r24
 4e0:	91 50       	subi	r25, 0x01	; 1
 4e2:	50 40       	sbci	r21, 0x00	; 0
 4e4:	a9 f7       	brne	.-22     	; 0x4d0 <__mulsf3_pse+0x64>
 4e6:	9e 3f       	cpi	r25, 0xFE	; 254
 4e8:	51 05       	cpc	r21, r1
 4ea:	80 f0       	brcs	.+32     	; 0x50c <__mulsf3_pse+0xa0>
 4ec:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__fp_inf>
 4f0:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_szero>
 4f4:	5f 3f       	cpi	r21, 0xFF	; 255
 4f6:	e4 f3       	brlt	.-8      	; 0x4f0 <__mulsf3_pse+0x84>
 4f8:	98 3e       	cpi	r25, 0xE8	; 232
 4fa:	d4 f3       	brlt	.-12     	; 0x4f0 <__mulsf3_pse+0x84>
 4fc:	86 95       	lsr	r24
 4fe:	77 95       	ror	r23
 500:	67 95       	ror	r22
 502:	b7 95       	ror	r27
 504:	f7 95       	ror	r31
 506:	e7 95       	ror	r30
 508:	9f 5f       	subi	r25, 0xFF	; 255
 50a:	c1 f7       	brne	.-16     	; 0x4fc <__mulsf3_pse+0x90>
 50c:	fe 2b       	or	r31, r30
 50e:	88 0f       	add	r24, r24
 510:	91 1d       	adc	r25, r1
 512:	96 95       	lsr	r25
 514:	87 95       	ror	r24
 516:	97 f9       	bld	r25, 7
 518:	08 95       	ret

0000051a <_exit>:
 51a:	f8 94       	cli

0000051c <__stop_program>:
 51c:	ff cf       	rjmp	.-2      	; 0x51c <__stop_program>
